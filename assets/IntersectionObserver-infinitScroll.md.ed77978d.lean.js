import{o as n,c as s,a}from"./app.2522851a.js";const t='{"title":"IntersectionObserver 之无限滚动","description":"","frontmatter":{"title":"IntersectionObserver 之无限滚动","date":"2019-12-11","tags":["JavaScript"],"describe":"最近的一个开发需求中需要实现一个双向的无限滚动，即列表加载后列表顶部不是第一条数据，而是中间的某一条数据，向上滚动到顶部时，加载之前的数据，向下滚动到底部时，加载之后的数据。首先想到的是使用 `vue-infinite-loading` 组件，因为之前实现单向的无限滚动已经在项目中使用过，试过之后结果发现并不能满足双向无限滚动，于是便自己动手实现了。首先想到的是通过监听 `scroll` 事件实现，后来发现一个非常适合用于无限滚动的 API： `IntersectionObserver` ，于是改用 `IntersectionObserver` 来实现了。"},"relativePath":"IntersectionObserver-infinitScroll.md","lastUpdated":1624580416132}',p={},o=a('',16);p.render=function(a,t,p,e,c,u){return n(),s("div",null,[o])};export default p;export{t as __pageData};
